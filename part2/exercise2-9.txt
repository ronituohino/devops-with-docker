Docker Compose file:
version: '3.8'

services:
  reverse-proxy:
    image: nginx:1.23.3-alpine
    container_name: reverse-proxy
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 127.0.0.1:80:80

  frontend:
    image: frontend
    build: ~/material-applications/example-frontend
    container_name: frontend
    environment:
      - REACT_APP_BACKEND_URL=http://localhost
    ports:
      - 127.0.0.1:5000:5000
  
  backend:
    image: backend
    build: ~/material-applications/example-backend
    container_name: backend
    environment:
      - REQUEST_ORIGIN=http://localhost
      - REDIS_HOST=backend-cache
      - POSTGRES_HOST=backend-db
      - POSTGRES_PASSWORD=averygoodpassowrd!
    ports:
      - 127.0.0.1:8080:8080
    depends_on:
      - backend-db

  backend-cache:
    image: redis:alpine3.17
    container_name: backend-cache
    depends_on:
      - backend-db

  backend-db:
    image: postgres:15.2-alpine
    container_name: backend-db
    environment:
      - POSTGRES_PASSWORD=averygoodpassowrd!
    volumes:
      - database:/var/lib/postgresql/data

volumes:
  database:



Frontend Dockerfile:
FROM node:16-alpine

EXPOSE 5000
WORKDIR /usr/src/app

RUN npm install -g serve

ENV REACT_APP_BACKEND_URL=http://localhost:8080/
COPY package* ./
RUN npm install 

COPY . .
RUN npm run build 

CMD ["serve", "-s", "-l", "5000", "build"]



Backend Dockerfile:
FROM golang:1.16-alpine3.15

ENV REQUEST_ORIGIN=http://localhost:5000
WORKDIR /usr/src/app
EXPOSE 8080

COPY . .
RUN go build

CMD ["./server"]